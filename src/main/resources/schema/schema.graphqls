# 인풋 타입 정의
input ProductInput {
    name: String!
    price: Int!
    stock: Int!
    mainImage: String
    description: String
    categoryId: ID!
}

input ProductUpdateInput {
    id: ID!
    name: String
    price: Int
    stock: Int
    mainImage: String
    description: String
    categoryId: ID
    deleted: Boolean
}

input CategoryInput {
    name: String!
    description: String
}

input CategoryUpdateInput {
    id: ID!
    name: String
    description: String
}

# 데이터 타입 정의
type Category {
    id: ID!
    name: String!
    description: String
    createdTimeStamps: String
    updatedTimeStamps: String
}

# 페이징 정보 타입
type PageInfo {
    totalItems: Int!
    totalPages: Int!
    currentPage: Int!
    hasNextPage: Boolean!
}

type Product {
    id: ID
    name: String
    price: Int
    stock: Int
    mainImage: String
    description: String
    createdTimeStamps: String
    updatedTimeStamps: String
    category: Category
}

# Product 페이징 타입 정의
type ProductPage {
    items: [Product]
    pageInfo: PageInfo!
}

# Query 타입 정의 (데이터 조회용)
type Query {
    products(
        name: String,
        overprice: Int,
        underprice: Int,
        categoryId: Int,
        page: Int = 0,
        size: Int = 10
    ): [Product]

    product(id: ID!): Product

    categories: [Category]
#
#    category(id: ID!): Category
}

# Mutation 타입 정의 (데이터 변경용)
type Mutation {
    addProduct(input: ProductInput!): Product

    updateProduct(input: ProductUpdateInput!): Product

    deleteProduct(id: ID!): Boolean

#    addCategory(input: CategoryInput!): Category
#
#    updateCategory(input: CategoryUpdateInput!): Category
#
#    deleteCategory(id: ID!): Boolean
}
